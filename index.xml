<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mortal Odyssey</title>
    <link>https://www.mortalodyssey.com/</link>
    <description>Recent content on Mortal Odyssey</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Oct 2024 07:58:58 +0800</lastBuildDate>
    <atom:link href="https://www.mortalodyssey.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>安装Bazel并编译运行</title>
      <link>https://www.mortalodyssey.com/posts/cloud-computing-ex1-0/</link>
      <pubDate>Mon, 21 Oct 2024 07:58:58 +0800</pubDate>
      <guid>https://www.mortalodyssey.com/posts/cloud-computing-ex1-0/</guid>
      <description>&lt;h2 id=&#34;关于远程服务器&#34;&gt;关于远程服务器&lt;/h2&gt;&#xA;&lt;p&gt;本文使用的操作系统是ubuntu 22.04。&lt;/p&gt;&#xA;&lt;p&gt;如果需要运行trpc-cpp,可能服务器的内存要&amp;gt;2gb，否则后期编译运行时会有问题。&lt;/p&gt;&#xA;&lt;p&gt;另外，直接登入root操作可能会遇到奇怪的问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;github加速&#34;&gt;github加速&lt;/h2&gt;&#xA;&lt;p&gt;参考这个&lt;a href=&#34;https://www.cnblogs.com/boring-luobo/p/18458736&#34; target=&#34;_blank&#34;&gt;github加速 - 妖岭 - 博客园 (cnblogs.com)&lt;/a&gt;，后续下载会快一点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;bazel安装配置&#34;&gt;bazel安装配置&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bazel.build/?hl=zh-cn&#34; target=&#34;_blank&#34;&gt;Bazel官网&lt;/a&gt;中可以找到推荐的安装方式是使用Bazelisk，一个有版本管理功能的Bazel启动器。&#xA;&lt;img src=&#34;https://pic-1324265358.cos.ap-nanjing.myqcloud.com/Pasted%20image%2020241016225027.png&#34; alt=&#34;Pasted image 20241016225027.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以直接下载deb文件并安装&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://github.com/bazelbuild/bazelisk/releases/download/v1.22.0/bazelisk-amd64.deb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg -i bazelisk-amd64.deb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;理论上，只要输入&lt;code&gt;bazel&lt;/code&gt;，bazelisk就会初次启动，自动下载Bazel某个版本。那么只要输入&lt;code&gt;bazel --version&lt;/code&gt;后能看到版本信息，就能确定&lt;code&gt;Bazel&lt;/code&gt;安装成功。&lt;/p&gt;&#xA;&lt;p&gt;实际上，可能会在卡顿许久后出现以下提示信息：&#xA;&lt;img src=&#34;https://pic-1324265358.cos.ap-nanjing.myqcloud.com/20241016233257.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;bazel版本设置&#34;&gt;Bazel版本设置&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bazelbuild/bazelisk&#34; target=&#34;_blank&#34;&gt;bazelisk的github仓库&lt;/a&gt;里有写到它在初次启动时如何确定下载哪个Bazel版本。&#xA;&lt;img src=&#34;https://pic-1324265358.cos.ap-nanjing.myqcloud.com/20241021080434.png&#34; alt=&#34;image.png&#34;&gt;&#xA;可以看到，如果没有预先设置要使用的版本，它就会自动搜索使用最新的版本信息。但它搜索的&lt;a href=&#34;https://www.googleapis.com/storage/v1/b/bazel/o?delimiter=/&#34; target=&#34;_blank&#34;&gt;这个链接&lt;/a&gt;在不翻墙的情况下无法访问，因此会出现如上所示的报错。&lt;/p&gt;&#xA;&lt;p&gt;解决方法就是，预先设置要使用的version来避开这一步，可以利用.bazeliskrc文件。&#xA;&lt;img src=&#34;https://pic-1324265358.cos.ap-nanjing.myqcloud.com/20241016234806.png&#34; alt=&#34;image.png&#34;&gt;&#xA;用这个指令即可指定version：&lt;code&gt;echo &amp;quot;USE_BAZEL_VERSION=6.1.0&amp;quot; &amp;gt; .bazeliskrc&lt;/code&gt; ，&lt;code&gt;6.1.0&lt;/code&gt;应被实际选择版本号替代。&#xA;至于版本的选择，如果需要编译&lt;a href=&#34;https://github.com/trpc-group/trpc-cpp/blob/main/docs/zh/setup_env.md&#34; target=&#34;_blank&#34;&gt;trpc-cpp&lt;/a&gt;，事实上需要Bazel版本是&amp;gt;=3.5.1,&amp;lt;7的。(&lt;a href=&#34;https://github.com/trpc-group/trpc-cpp/blob/main/docs/zh/setup_env.md&#34; target=&#34;_blank&#34;&gt;参考这个&lt;/a&gt;和&lt;a href=&#34;https://github.com/trpc-group/trpc-cpp/issues/170&#34; target=&#34;_blank&#34;&gt;这个&lt;/a&gt;)&#xA;可以在上面的googleapi链接或&lt;a href=&#34;https://mirrors.huaweicloud.com/bazel/&#34; target=&#34;_blank&#34;&gt;华为云 bazel&lt;/a&gt;找到所有版本号。&lt;/p&gt;&#xA;&lt;h3 id=&#34;其他参考链接&#34;&gt;其他参考链接&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://bazel.build/start/cpp?hl=zh-cn&#34; target=&#34;_blank&#34;&gt;Bazel 教程：构建 C++ 项目&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/65656165&#34; target=&#34;_blank&#34;&gt;另一种安装Bazelisk方式&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bazelbuild/bazelisk/issues/571&#34; target=&#34;_blank&#34;&gt;Steps for installing Bazelisk are not new-developer friendly&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;编译运行trpc-cpp&#34;&gt;编译运行trpc-cpp&lt;/h2&gt;&#xA;&lt;p&gt;只要按照&lt;a href=&#34;https://github.com/trpc-group/trpc-cpp/blob/main/docs/zh/setup_env.md&#34; target=&#34;_blank&#34;&gt;trpc-cpp/docs/zh/setup_env.md at main · trpc-group/trpc-cpp&lt;/a&gt;上的说明操作即可，具体如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 进入根目录trpc-cpp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd trpc-cpp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 用bazel编译并运行框架提供的example示例&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./run_examples.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外，如果先编译helloworld demo来测试会快一点。&#xA;&lt;code&gt;./examples/helloworld/run.sh&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CCPC Harbin 2023</title>
      <link>https://www.mortalodyssey.com/posts/ccpc-harbin/</link>
      <pubDate>Sun, 13 Oct 2024 20:21:21 +0800</pubDate>
      <guid>https://www.mortalodyssey.com/posts/ccpc-harbin/</guid>
      <description>&lt;p&gt;一次很乐的vp，简单补下题&lt;/p&gt;&#xA;&lt;h3 id=&#34;j-game-on-a-forest&#34;&gt;J. Game on a Forest&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/gym/104813/problem/J&#34; target=&#34;_blank&#34;&gt;Problem - J - Codeforces&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;题意是有一个森林，2个人交替取走 一个节点及其所连所有边 或 一条边，无法操作者输。问先手第一步有多少操作能导向胜利局面。&lt;/p&gt;&#xA;&lt;p&gt;边数、点数$O(1e5)$&lt;/p&gt;&#xA;&lt;p&gt;森林是由一些分散的树构成的，每个树的情况都有独立性，组合在一起更显复杂。但经典的&lt;a href=&#34;https://oi-wiki.org/math/game-theory/impartial-game/#%E6%9C%89%E5%90%91%E5%9B%BE%E6%B8%B8%E6%88%8F%E4%B8%8E-sg-%E5%87%BD%E6%95%B0&#34; target=&#34;_blank&#34;&gt;公平组合游戏 - OI wiki&lt;/a&gt;中对这种情况早有叙述。毕竟在Nim游戏中，也有几堆石头，每堆石头的情况是相对独立的。&lt;/p&gt;&#xA;&lt;p&gt;截图OI wiki上的SG定理&#xA;&lt;img src=&#34;https://pic-1324265358.cos.ap-nanjing.myqcloud.com/20241013173737.png&#34; alt=&#34;image.png&#34;&gt;&#xA;那么，只要将一棵树建模为有向图，分析它的SG函数即可。&#xA;较为复杂的事是，玩家有2种操作：拿边和拿点.&#xA;易得1个点的树SG值为1，2个点的树SG值为2（#-# -&amp;gt; # # 或 # , SG分别为0，1）.&#xA;3个点的树形态也唯一，可以继续推得是1，进而推得4是2. 开始有规律了，似乎是奇数节点数的树SG值为1，偶数的为2.&lt;/p&gt;&#xA;&lt;p&gt;在这里先泛泛地想一下，对多个点的树进行操作可能的所有情况：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;拿走1个点，可能&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这棵树的节点会少一个（拿走的没儿子）&lt;/li&gt;&#xA;&lt;li&gt;分为多棵树（拿走的有儿子）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;拿走1边，会&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分为2棵树&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;那么对那个从奇偶角度提出的假设，用数学归纳的思路，试证明：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;拿走1个点，可能&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这棵树的节点会少一个（拿走的没儿子）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;奇树 变为偶树 (SG为2)&lt;/li&gt;&#xA;&lt;li&gt;偶树 变为奇树 (SG为1)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分为多棵树（拿走的有儿子）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;奇树可能分为：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;偶数个奇树 奇数个偶树 (SG为2)&lt;/li&gt;&#xA;&lt;li&gt;偶数个奇树 偶数个偶树 (SG为0)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;偶树可能分为：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;奇数个奇树 奇数个偶树 (SG为3)&lt;/li&gt;&#xA;&lt;li&gt;奇数个奇树 偶数个偶树 (SG为1)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;拿走1边，会&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分为2棵树&#xA;&lt;ul&gt;&#xA;&lt;li&gt;奇树分为&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1奇1偶 (SG为3)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;偶树可能分为&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2偶 (SG为0)&lt;/li&gt;&#xA;&lt;li&gt;2奇 (SG为0)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;发现是对的.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Do Not Go Gentle Into That Good Night</title>
      <link>https://www.mortalodyssey.com/thoughts/do-not-go-gentle-into-that-good-night/</link>
      <pubDate>Thu, 10 Oct 2024 10:27:12 +0800</pubDate>
      <guid>https://www.mortalodyssey.com/thoughts/do-not-go-gentle-into-that-good-night/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;不要温顺地走进那好晚上,&lt;br&gt;&#xA;老年应该在白天结束大烧大吼,&lt;br&gt;&#xA;对消失的光生气！生气！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;最近在xhs上刷到《不要温和地走进那个良夜》的原文，读起来更 切实 一些，也有人发了甚至更切实的译法：&lt;/p&gt;&#xA;&lt;p&gt;很有意思，把全诗原文记录一下:&lt;/p&gt;&#xA;&lt;p&gt;Do not go gentle into that good night,&lt;br&gt;&#xA;Old age should burn and rave at close of day;&lt;br&gt;&#xA;Rage, rage against the dying of the light.&lt;/p&gt;&#xA;&lt;p&gt;Though wise men at their end know dark is right,&lt;br&gt;&#xA;Because their words had forked no lightning they&lt;br&gt;&#xA;Do not go gentle into that good night.&lt;/p&gt;&#xA;&lt;p&gt;Good men, the last wave by, crying how bright&lt;br&gt;&#xA;Their frail deeds might have danced in a green bay,&lt;br&gt;&#xA;Rage, rage against the dying of the light.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
